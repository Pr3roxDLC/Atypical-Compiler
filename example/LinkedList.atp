import java.lang.String as String;
import java.lang.System as System;

main(String[]: args){
    LinkedList: list = LinkedList{null, 0};
    list.add("Hello");
    list.add("World");
    list.add("Im");
    list.add("Tim");
    Iterator: it = list.iterator();
    while(it.hasNext()){
        System.out.println(it.next());
    }
}

trait Iterator {
    hasNext(): bool;
    next(): String;
}

trait Iterable {
    iterator(): Iterator;
}

module LinkedList {
    struct{
       Node: head;
       int: size;
    }

    impl {
            add(String: content) {
                this.size = this.size + 1;
                if(this.head == null){
                    this.head = Node{null, content};
                } else {
                    Node: current = this.head;
                    while(current.next != null) {
                        current = current.next;
                    }
                    current.next = Node{null, content};
                }
            }
            get(int: index): String {
                int: counter = 0;
                Node: current = this.head;
                while(counter != index){
                    current = current.next;
                    counter = counter + 1;
                }
                return current.content;
            }
            size(): int {
                return this.size;
            }
        }
}

module Node {
    struct {
        Node: next;
        String: content;
    }
}

module LinkedListIter {
    struct {
        Node: current;
    }
}

impl Iterator for LinkedListIter{
    next(): String {
        this.current = this.current.next;
        return this.current.content;
    }
    hasNext(): bool {
        return this.current.next != null;
    }
}

impl Iterable for LinkedList {
    iterator(): Iterator {
        return (Iterator)LinkedListIter{this.head};
    }
}